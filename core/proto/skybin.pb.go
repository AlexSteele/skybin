// Code generated by protoc-gen-go. DO NOT EDIT.
// source: skybin.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	skybin.proto

It has these top-level messages:
	Block
	StoreBlockRequest
	StoreBlockResponse
	GetBlockRequest
	GetBlockResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Block struct {
	Data []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *Block) Reset()                    { *m = Block{} }
func (m *Block) String() string            { return proto1.CompactTextString(m) }
func (*Block) ProtoMessage()               {}
func (*Block) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Block) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type StoreBlockRequest struct {
	BlockId string `protobuf:"bytes,1,opt,name=blockId" json:"blockId,omitempty"`
	Block   *Block `protobuf:"bytes,2,opt,name=block" json:"block,omitempty"`
}

func (m *StoreBlockRequest) Reset()                    { *m = StoreBlockRequest{} }
func (m *StoreBlockRequest) String() string            { return proto1.CompactTextString(m) }
func (*StoreBlockRequest) ProtoMessage()               {}
func (*StoreBlockRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StoreBlockRequest) GetBlockId() string {
	if m != nil {
		return m.BlockId
	}
	return ""
}

func (m *StoreBlockRequest) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type StoreBlockResponse struct {
}

func (m *StoreBlockResponse) Reset()                    { *m = StoreBlockResponse{} }
func (m *StoreBlockResponse) String() string            { return proto1.CompactTextString(m) }
func (*StoreBlockResponse) ProtoMessage()               {}
func (*StoreBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type GetBlockRequest struct {
	BlockId string `protobuf:"bytes,1,opt,name=blockId" json:"blockId,omitempty"`
}

func (m *GetBlockRequest) Reset()                    { *m = GetBlockRequest{} }
func (m *GetBlockRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetBlockRequest) ProtoMessage()               {}
func (*GetBlockRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetBlockRequest) GetBlockId() string {
	if m != nil {
		return m.BlockId
	}
	return ""
}

type GetBlockResponse struct {
	Block *Block `protobuf:"bytes,1,opt,name=block" json:"block,omitempty"`
}

func (m *GetBlockResponse) Reset()                    { *m = GetBlockResponse{} }
func (m *GetBlockResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetBlockResponse) ProtoMessage()               {}
func (*GetBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetBlockResponse) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func init() {
	proto1.RegisterType((*Block)(nil), "proto.Block")
	proto1.RegisterType((*StoreBlockRequest)(nil), "proto.StoreBlockRequest")
	proto1.RegisterType((*StoreBlockResponse)(nil), "proto.StoreBlockResponse")
	proto1.RegisterType((*GetBlockRequest)(nil), "proto.GetBlockRequest")
	proto1.RegisterType((*GetBlockResponse)(nil), "proto.GetBlockResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Peer service

type PeerClient interface {
	StoreBlock(ctx context.Context, in *StoreBlockRequest, opts ...grpc.CallOption) (*StoreBlockResponse, error)
	GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error)
}

type peerClient struct {
	cc *grpc.ClientConn
}

func NewPeerClient(cc *grpc.ClientConn) PeerClient {
	return &peerClient{cc}
}

func (c *peerClient) StoreBlock(ctx context.Context, in *StoreBlockRequest, opts ...grpc.CallOption) (*StoreBlockResponse, error) {
	out := new(StoreBlockResponse)
	err := grpc.Invoke(ctx, "/proto.Peer/StoreBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *peerClient) GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error) {
	out := new(GetBlockResponse)
	err := grpc.Invoke(ctx, "/proto.Peer/GetBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Peer service

type PeerServer interface {
	StoreBlock(context.Context, *StoreBlockRequest) (*StoreBlockResponse, error)
	GetBlock(context.Context, *GetBlockRequest) (*GetBlockResponse, error)
}

func RegisterPeerServer(s *grpc.Server, srv PeerServer) {
	s.RegisterService(&_Peer_serviceDesc, srv)
}

func _Peer_StoreBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeerServer).StoreBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Peer/StoreBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeerServer).StoreBlock(ctx, req.(*StoreBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Peer_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PeerServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Peer/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PeerServer).GetBlock(ctx, req.(*GetBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Peer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Peer",
	HandlerType: (*PeerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StoreBlock",
			Handler:    _Peer_StoreBlock_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _Peer_GetBlock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "skybin.proto",
}

func init() { proto1.RegisterFile("skybin.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0xce, 0xae, 0x4c,
	0xca, 0xcc, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xd2, 0x5c, 0xac,
	0x4e, 0x39, 0xf9, 0xc9, 0xd9, 0x42, 0x42, 0x5c, 0x2c, 0x2e, 0x89, 0x25, 0x89, 0x12, 0x8c, 0x0a,
	0x8c, 0x1a, 0x3c, 0x41, 0x60, 0xb6, 0x52, 0x20, 0x97, 0x60, 0x70, 0x49, 0x7e, 0x51, 0x2a, 0x58,
	0x45, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x04, 0x17, 0x7b, 0x12, 0x88, 0xef, 0x99,
	0x02, 0x56, 0xcb, 0x19, 0x04, 0xe3, 0x0a, 0x29, 0x71, 0xb1, 0x82, 0x99, 0x12, 0x4c, 0x40, 0x71,
	0x6e, 0x23, 0x1e, 0x88, 0x4d, 0x7a, 0x10, 0xdd, 0x10, 0x29, 0x25, 0x11, 0x2e, 0x21, 0x64, 0x23,
	0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x95, 0xb4, 0xb9, 0xf8, 0xdd, 0x53, 0x4b, 0x88, 0xb3, 0x46,
	0xc9, 0x8c, 0x4b, 0x00, 0xa1, 0x18, 0x62, 0x00, 0xc2, 0x6a, 0x46, 0x9c, 0x56, 0x1b, 0x75, 0x31,
	0x72, 0xb1, 0x04, 0xa4, 0xa6, 0x16, 0x09, 0x39, 0x73, 0x71, 0x21, 0xdc, 0x20, 0x24, 0x01, 0x55,
	0x8b, 0xe1, 0x53, 0x29, 0x49, 0x2c, 0x32, 0x50, 0x07, 0x33, 0x08, 0xd9, 0x72, 0x71, 0xc0, 0x5c,
	0x21, 0x24, 0x06, 0x55, 0x88, 0xe6, 0x07, 0x29, 0x71, 0x0c, 0x71, 0x98, 0xf6, 0x24, 0x36, 0xb0,
	0x8c, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xb4, 0xbe, 0xbb, 0x5d, 0x95, 0x01, 0x00, 0x00,
}
